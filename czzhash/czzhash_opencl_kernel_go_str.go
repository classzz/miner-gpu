package czzhash

const Kernel = `#define		PK_SIZE					32
#define		TS_SIZE				(PK_SIZE*8)
#define		CZA_DATA_SIZE			8
#define		CZA_KEYSBUFF_SIZE		56
#define		CZA_CWBITS_SIZE			64

typedef		uchar				cza_cw_t[8];
typedef		uchar			cza_block_t[CZA_DATA_SIZE];
typedef		uchar			cza_keys_t[CZA_KEYSBUFF_SIZE];

#ifndef KECCAKF_ROUNDS
#define KECCAKF_ROUNDS 24
#endif

#ifndef ROTL64
#define ROTL64(x, y) (((x) << (y)) | ((x) >> (64 - (y))))
#endif

__constant uchar	cza_perm[256] =
{
	0x00, 0x02, 0x80, 0x82, 0x20, 0x22, 0xa0, 0xa2, 0x10, 0x12, 0x90, 0x92, 0x30, 0x32, 0xb0, 0xb2,
	0x04, 0x06, 0x84, 0x86, 0x24, 0x26, 0xa4, 0xa6, 0x14, 0x16, 0x94, 0x96, 0x34, 0x36, 0xb4, 0xb6,
	0x40, 0x42, 0xc0, 0xc2, 0x60, 0x62, 0xe0, 0xe2, 0x50, 0x52, 0xd0, 0xd2, 0x70, 0x72, 0xf0, 0xf2,
	0x44, 0x46, 0xc4, 0xc6, 0x64, 0x66, 0xe4, 0xe6, 0x54, 0x56, 0xd4, 0xd6, 0x74, 0x76, 0xf4, 0xf6,
	0x01, 0x03, 0x81, 0x83, 0x21, 0x23, 0xa1, 0xa3, 0x11, 0x13, 0x91, 0x93, 0x31, 0x33, 0xb1, 0xb3,
	0x05, 0x07, 0x85, 0x87, 0x25, 0x27, 0xa5, 0xa7, 0x15, 0x17, 0x95, 0x97, 0x35, 0x37, 0xb5, 0xb7,
	0x41, 0x43, 0xc1, 0xc3, 0x61, 0x63, 0xe1, 0xe3, 0x51, 0x53, 0xd1, 0xd3, 0x71, 0x73, 0xf1, 0xf3,
	0x45, 0x47, 0xc5, 0xc7, 0x65, 0x67, 0xe5, 0xe7, 0x55, 0x57, 0xd5, 0xd7, 0x75, 0x77, 0xf5, 0xf7,
	0x08, 0x0a, 0x88, 0x8a, 0x28, 0x2a, 0xa8, 0xaa, 0x18, 0x1a, 0x98, 0x9a, 0x38, 0x3a, 0xb8, 0xba,
	0x0c, 0x0e, 0x8c, 0x8e, 0x2c, 0x2e, 0xac, 0xae, 0x1c, 0x1e, 0x9c, 0x9e, 0x3c, 0x3e, 0xbc, 0xbe,
	0x48, 0x4a, 0xc8, 0xca, 0x68, 0x6a, 0xe8, 0xea, 0x58, 0x5a, 0xd8, 0xda, 0x78, 0x7a, 0xf8, 0xfa,
	0x4c, 0x4e, 0xcc, 0xce, 0x6c, 0x6e, 0xec, 0xee, 0x5c, 0x5e, 0xdc, 0xde, 0x7c, 0x7e, 0xfc, 0xfe,
	0x09, 0x0b, 0x89, 0x8b, 0x29, 0x2b, 0xa9, 0xab, 0x19, 0x1b, 0x99, 0x9b, 0x39, 0x3b, 0xb9, 0xbb,
	0x0d, 0x0f, 0x8d, 0x8f, 0x2d, 0x2f, 0xad, 0xaf, 0x1d, 0x1f, 0x9d, 0x9f, 0x3d, 0x3f, 0xbd, 0xbf,
	0x49, 0x4b, 0xc9, 0xcb, 0x69, 0x6b, 0xe9, 0xeb, 0x59, 0x5b, 0xd9, 0xdb, 0x79, 0x7b, 0xf9, 0xfb,
	0x4d, 0x4f, 0xcd, 0xcf, 0x6d, 0x6f, 0xed, 0xef, 0x5d, 0x5f, 0xdd, 0xdf, 0x7d, 0x7f, 0xfd, 0xff,
};

__constant uchar	cza_sbox[256] =
{
	0x3a, 0xea, 0x68, 0xfe, 0x33, 0xe9, 0x88, 0x1a, 0x83, 0xcf, 0xe1, 0x7f, 0xba, 0xe2, 0x38, 0x12,
	0xe8, 0x27, 0x61, 0x95, 0x0c, 0x36, 0xe5, 0x70, 0xa2, 0x06, 0x82, 0x7c, 0x17, 0xa3, 0x26, 0x49,
	0xbe, 0x7a, 0x6d, 0x47, 0xc1, 0x51, 0x8f, 0xf3, 0xcc, 0x5b, 0x67, 0xbd, 0xcd, 0x18, 0x08, 0xc9,
	0xff, 0x69, 0xef, 0x03, 0x4e, 0x48, 0x4a, 0x84, 0x3f, 0xb4, 0x10, 0x04, 0xdc, 0xf5, 0x5c, 0xc6,
	0x16, 0xab, 0xac, 0x4c, 0xf1, 0x6a, 0x2f, 0x3c, 0x3b, 0xd4, 0xd5, 0x94, 0xd0, 0xc4, 0x63, 0x62,
	0x71, 0xa1, 0xf9, 0x4f, 0x2e, 0xaa, 0xc5, 0x56, 0xe3, 0x39, 0x93, 0xce, 0x65, 0x64, 0xe4, 0x58,
	0x6c, 0x19, 0x42, 0x79, 0xdd, 0xee, 0x96, 0xf6, 0x8a, 0xec, 0x1e, 0x85, 0x53, 0x45, 0xde, 0xbb,
	0x7e, 0x0a, 0x9a, 0x13, 0x2a, 0x9d, 0xc2, 0x5e, 0x5a, 0x1f, 0x32, 0x35, 0x9c, 0xa8, 0x73, 0x30,
	0x29, 0x3d, 0xe7, 0x92, 0x87, 0x1b, 0x2b, 0x4b, 0xa5, 0x57, 0x97, 0x40, 0x15, 0xe6, 0xbc, 0x0e,
	0xeb, 0xc3, 0x34, 0x2d, 0xb8, 0x44, 0x25, 0xa4, 0x1c, 0xc7, 0x23, 0xed, 0x90, 0x6e, 0x50, 0x00,
	0x99, 0x9e, 0x4d, 0xd9, 0xda, 0x8d, 0x6f, 0x5f, 0x3e, 0xd7, 0x21, 0x74, 0x86, 0xdf, 0x6b, 0x05,
	0x8e, 0x5d, 0x37, 0x11, 0xd2, 0x28, 0x75, 0xd6, 0xa7, 0x77, 0x24, 0xbf, 0xf0, 0xb0, 0x02, 0xb7,
	0xf8, 0xfc, 0x81, 0x09, 0xb1, 0x01, 0x76, 0x91, 0x7d, 0x0f, 0xc8, 0xa0, 0xf2, 0xcb, 0x78, 0x60,
	0xd1, 0xf7, 0xe0, 0xb5, 0x98, 0x22, 0xb3, 0x20, 0x1d, 0xa6, 0xdb, 0x7b, 0x59, 0x9f, 0xae, 0x31,
	0xfb, 0xd3, 0xb6, 0xca, 0x43, 0x72, 0x07, 0xf4, 0xd8, 0x41, 0x14, 0x55, 0x0d, 0x54, 0x8b, 0xb9,
	0xad, 0x46, 0x0b, 0xaf, 0x80, 0x52, 0x2c, 0xfa, 0x8c, 0x89, 0x66, 0xfd, 0xb2, 0xa9, 0x9b, 0xc0,
};

__constant ulong kperm[8][256] =
{
	{
		0x0000000000000000ULL, 0x0000000000080000ULL, 0x0000000008000000ULL, 0x0000000008080000ULL,
		0x0080000000000000ULL, 0x0080000000080000ULL, 0x0080000008000000ULL, 0x0080000008080000ULL,
		0x0000400000000000ULL, 0x0000400000080000ULL, 0x0000400008000000ULL, 0x0000400008080000ULL,
		0x0080400000000000ULL, 0x0080400000080000ULL, 0x0080400008000000ULL, 0x0080400008080000ULL,
		0x0000000000000002ULL, 0x0000000000080002ULL, 0x0000000008000002ULL, 0x0000000008080002ULL,
		0x0080000000000002ULL, 0x0080000000080002ULL, 0x0080000008000002ULL, 0x0080000008080002ULL,
		0x0000400000000002ULL, 0x0000400000080002ULL, 0x0000400008000002ULL, 0x0000400008080002ULL,
		0x0080400000000002ULL, 0x0080400000080002ULL, 0x0080400008000002ULL, 0x0080400008080002ULL,
		0x0000000000008000ULL, 0x0000000000088000ULL, 0x0000000008008000ULL, 0x0000000008088000ULL,
		0x0080000000008000ULL, 0x0080000000088000ULL, 0x0080000008008000ULL, 0x0080000008088000ULL,
		0x0000400000008000ULL, 0x0000400000088000ULL, 0x0000400008008000ULL, 0x0000400008088000ULL,
		0x0080400000008000ULL, 0x0080400000088000ULL, 0x0080400008008000ULL, 0x0080400008088000ULL,
		0x0000000000008002ULL, 0x0000000000088002ULL, 0x0000000008008002ULL, 0x0000000008088002ULL,
		0x0080000000008002ULL, 0x0080000000088002ULL, 0x0080000008008002ULL, 0x0080000008088002ULL,
		0x0000400000008002ULL, 0x0000400000088002ULL, 0x0000400008008002ULL, 0x0000400008088002ULL,
		0x0080400000008002ULL, 0x0080400000088002ULL, 0x0080400008008002ULL, 0x0080400008088002ULL,
		0x0000001000000000ULL, 0x0000001000080000ULL, 0x0000001008000000ULL, 0x0000001008080000ULL,
		0x0080001000000000ULL, 0x0080001000080000ULL, 0x0080001008000000ULL, 0x0080001008080000ULL,
		0x0000401000000000ULL, 0x0000401000080000ULL, 0x0000401008000000ULL, 0x0000401008080000ULL,
		0x0080401000000000ULL, 0x0080401000080000ULL, 0x0080401008000000ULL, 0x0080401008080000ULL,
		0x0000001000000002ULL, 0x0000001000080002ULL, 0x0000001008000002ULL, 0x0000001008080002ULL,
		0x0080001000000002ULL, 0x0080001000080002ULL, 0x0080001008000002ULL, 0x0080001008080002ULL,
		0x0000401000000002ULL, 0x0000401000080002ULL, 0x0000401008000002ULL, 0x0000401008080002ULL,
		0x0080401000000002ULL, 0x0080401000080002ULL, 0x0080401008000002ULL, 0x0080401008080002ULL,
		0x0000001000008000ULL, 0x0000001000088000ULL, 0x0000001008008000ULL, 0x0000001008088000ULL,
		0x0080001000008000ULL, 0x0080001000088000ULL, 0x0080001008008000ULL, 0x0080001008088000ULL,
		0x0000401000008000ULL, 0x0000401000088000ULL, 0x0000401008008000ULL, 0x0000401008088000ULL,
		0x0080401000008000ULL, 0x0080401000088000ULL, 0x0080401008008000ULL, 0x0080401008088000ULL,
		0x0000001000008002ULL, 0x0000001000088002ULL, 0x0000001008008002ULL, 0x0000001008088002ULL,
		0x0080001000008002ULL, 0x0080001000088002ULL, 0x0080001008008002ULL, 0x0080001008088002ULL,
		0x0000401000008002ULL, 0x0000401000088002ULL, 0x0000401008008002ULL, 0x0000401008088002ULL,
		0x0080401000008002ULL, 0x0080401000088002ULL, 0x0080401008008002ULL, 0x0080401008088002ULL,
		0x0000000000400000ULL, 0x0000000000480000ULL, 0x0000000008400000ULL, 0x0000000008480000ULL,
		0x0080000000400000ULL, 0x0080000000480000ULL, 0x0080000008400000ULL, 0x0080000008480000ULL,
		0x0000400000400000ULL, 0x0000400000480000ULL, 0x0000400008400000ULL, 0x0000400008480000ULL,
		0x0080400000400000ULL, 0x0080400000480000ULL, 0x0080400008400000ULL, 0x0080400008480000ULL,
		0x0000000000400002ULL, 0x0000000000480002ULL, 0x0000000008400002ULL, 0x0000000008480002ULL,
		0x0080000000400002ULL, 0x0080000000480002ULL, 0x0080000008400002ULL, 0x0080000008480002ULL,
		0x0000400000400002ULL, 0x0000400000480002ULL, 0x0000400008400002ULL, 0x0000400008480002ULL,
		0x0080400000400002ULL, 0x0080400000480002ULL, 0x0080400008400002ULL, 0x0080400008480002ULL,
		0x0000000000408000ULL, 0x0000000000488000ULL, 0x0000000008408000ULL, 0x0000000008488000ULL,
		0x0080000000408000ULL, 0x0080000000488000ULL, 0x0080000008408000ULL, 0x0080000008488000ULL,
		0x0000400000408000ULL, 0x0000400000488000ULL, 0x0000400008408000ULL, 0x0000400008488000ULL,
		0x0080400000408000ULL, 0x0080400000488000ULL, 0x0080400008408000ULL, 0x0080400008488000ULL,
		0x0000000000408002ULL, 0x0000000000488002ULL, 0x0000000008408002ULL, 0x0000000008488002ULL,
		0x0080000000408002ULL, 0x0080000000488002ULL, 0x0080000008408002ULL, 0x0080000008488002ULL,
		0x0000400000408002ULL, 0x0000400000488002ULL, 0x0000400008408002ULL, 0x0000400008488002ULL,
		0x0080400000408002ULL, 0x0080400000488002ULL, 0x0080400008408002ULL, 0x0080400008488002ULL,
		0x0000001000400000ULL, 0x0000001000480000ULL, 0x0000001008400000ULL, 0x0000001008480000ULL,
		0x0080001000400000ULL, 0x0080001000480000ULL, 0x0080001008400000ULL, 0x0080001008480000ULL,
		0x0000401000400000ULL, 0x0000401000480000ULL, 0x0000401008400000ULL, 0x0000401008480000ULL,
		0x0080401000400000ULL, 0x0080401000480000ULL, 0x0080401008400000ULL, 0x0080401008480000ULL,
		0x0000001000400002ULL, 0x0000001000480002ULL, 0x0000001008400002ULL, 0x0000001008480002ULL,
		0x0080001000400002ULL, 0x0080001000480002ULL, 0x0080001008400002ULL, 0x0080001008480002ULL,
		0x0000401000400002ULL, 0x0000401000480002ULL, 0x0000401008400002ULL, 0x0000401008480002ULL,
		0x0080401000400002ULL, 0x0080401000480002ULL, 0x0080401008400002ULL, 0x0080401008480002ULL,
		0x0000001000408000ULL, 0x0000001000488000ULL, 0x0000001008408000ULL, 0x0000001008488000ULL,
		0x0080001000408000ULL, 0x0080001000488000ULL, 0x0080001008408000ULL, 0x0080001008488000ULL,
		0x0000401000408000ULL, 0x0000401000488000ULL, 0x0000401008408000ULL, 0x0000401008488000ULL,
		0x0080401000408000ULL, 0x0080401000488000ULL, 0x0080401008408000ULL, 0x0080401008488000ULL,
		0x0000001000408002ULL, 0x0000001000488002ULL, 0x0000001008408002ULL, 0x0000001008488002ULL,
		0x0080001000408002ULL, 0x0080001000488002ULL, 0x0080001008408002ULL, 0x0080001008488002ULL,
		0x0000401000408002ULL, 0x0000401000488002ULL, 0x0000401008408002ULL, 0x0000401008488002ULL,
		0x0080401000408002ULL, 0x0080401000488002ULL, 0x0080401008408002ULL, 0x0080401008488002ULL,
	},
	{
		0x0000000000000000ULL, 0x0100000000000000ULL, 0x2000000000000000ULL, 0x2100000000000000ULL,
		0x0000008000000000ULL, 0x0100008000000000ULL, 0x2000008000000000ULL, 0x2100008000000000ULL,
		0x0000000000200000ULL, 0x0100000000200000ULL, 0x2000000000200000ULL, 0x2100000000200000ULL,
		0x0000008000200000ULL, 0x0100008000200000ULL, 0x2000008000200000ULL, 0x2100008000200000ULL,
		0x0040000000000000ULL, 0x0140000000000000ULL, 0x2040000000000000ULL, 0x2140000000000000ULL,
		0x0040008000000000ULL, 0x0140008000000000ULL, 0x2040008000000000ULL, 0x2140008000000000ULL,
		0x0040000000200000ULL, 0x0140000000200000ULL, 0x2040000000200000ULL, 0x2140000000200000ULL,
		0x0040008000200000ULL, 0x0140008000200000ULL, 0x2040008000200000ULL, 0x2140008000200000ULL,
		0x0400000000000000ULL, 0x0500000000000000ULL, 0x2400000000000000ULL, 0x2500000000000000ULL,
		0x0400008000000000ULL, 0x0500008000000000ULL, 0x2400008000000000ULL, 0x2500008000000000ULL,
		0x0400000000200000ULL, 0x0500000000200000ULL, 0x2400000000200000ULL, 0x2500000000200000ULL,
		0x0400008000200000ULL, 0x0500008000200000ULL, 0x2400008000200000ULL, 0x2500008000200000ULL,
		0x0440000000000000ULL, 0x0540000000000000ULL, 0x2440000000000000ULL, 0x2540000000000000ULL,
		0x0440008000000000ULL, 0x0540008000000000ULL, 0x2440008000000000ULL, 0x2540008000000000ULL,
		0x0440000000200000ULL, 0x0540000000200000ULL, 0x2440000000200000ULL, 0x2540000000200000ULL,
		0x0440008000200000ULL, 0x0540008000200000ULL, 0x2440008000200000ULL, 0x2540008000200000ULL,
		0x0004000000000000ULL, 0x0104000000000000ULL, 0x2004000000000000ULL, 0x2104000000000000ULL,
		0x0004008000000000ULL, 0x0104008000000000ULL, 0x2004008000000000ULL, 0x2104008000000000ULL,
		0x0004000000200000ULL, 0x0104000000200000ULL, 0x2004000000200000ULL, 0x2104000000200000ULL,
		0x0004008000200000ULL, 0x0104008000200000ULL, 0x2004008000200000ULL, 0x2104008000200000ULL,
		0x0044000000000000ULL, 0x0144000000000000ULL, 0x2044000000000000ULL, 0x2144000000000000ULL,
		0x0044008000000000ULL, 0x0144008000000000ULL, 0x2044008000000000ULL, 0x2144008000000000ULL,
		0x0044000000200000ULL, 0x0144000000200000ULL, 0x2044000000200000ULL, 0x2144000000200000ULL,
		0x0044008000200000ULL, 0x0144008000200000ULL, 0x2044008000200000ULL, 0x2144008000200000ULL,
		0x0404000000000000ULL, 0x0504000000000000ULL, 0x2404000000000000ULL, 0x2504000000000000ULL,
		0x0404008000000000ULL, 0x0504008000000000ULL, 0x2404008000000000ULL, 0x2504008000000000ULL,
		0x0404000000200000ULL, 0x0504000000200000ULL, 0x2404000000200000ULL, 0x2504000000200000ULL,
		0x0404008000200000ULL, 0x0504008000200000ULL, 0x2404008000200000ULL, 0x2504008000200000ULL,
		0x0444000000000000ULL, 0x0544000000000000ULL, 0x2444000000000000ULL, 0x2544000000000000ULL,
		0x0444008000000000ULL, 0x0544008000000000ULL, 0x2444008000000000ULL, 0x2544008000000000ULL,
		0x0444000000200000ULL, 0x0544000000200000ULL, 0x2444000000200000ULL, 0x2544000000200000ULL,
		0x0444008000200000ULL, 0x0544008000200000ULL, 0x2444008000200000ULL, 0x2544008000200000ULL,
		0x0000000010000000ULL, 0x0100000010000000ULL, 0x2000000010000000ULL, 0x2100000010000000ULL,
		0x0000008010000000ULL, 0x0100008010000000ULL, 0x2000008010000000ULL, 0x2100008010000000ULL,
		0x0000000010200000ULL, 0x0100000010200000ULL, 0x2000000010200000ULL, 0x2100000010200000ULL,
		0x0000008010200000ULL, 0x0100008010200000ULL, 0x2000008010200000ULL, 0x2100008010200000ULL,
		0x0040000010000000ULL, 0x0140000010000000ULL, 0x2040000010000000ULL, 0x2140000010000000ULL,
		0x0040008010000000ULL, 0x0140008010000000ULL, 0x2040008010000000ULL, 0x2140008010000000ULL,
		0x0040000010200000ULL, 0x0140000010200000ULL, 0x2040000010200000ULL, 0x2140000010200000ULL,
		0x0040008010200000ULL, 0x0140008010200000ULL, 0x2040008010200000ULL, 0x2140008010200000ULL,
		0x0400000010000000ULL, 0x0500000010000000ULL, 0x2400000010000000ULL, 0x2500000010000000ULL,
		0x0400008010000000ULL, 0x0500008010000000ULL, 0x2400008010000000ULL, 0x2500008010000000ULL,
		0x0400000010200000ULL, 0x0500000010200000ULL, 0x2400000010200000ULL, 0x2500000010200000ULL,
		0x0400008010200000ULL, 0x0500008010200000ULL, 0x2400008010200000ULL, 0x2500008010200000ULL,
		0x0440000010000000ULL, 0x0540000010000000ULL, 0x2440000010000000ULL, 0x2540000010000000ULL,
		0x0440008010000000ULL, 0x0540008010000000ULL, 0x2440008010000000ULL, 0x2540008010000000ULL,
		0x0440000010200000ULL, 0x0540000010200000ULL, 0x2440000010200000ULL, 0x2540000010200000ULL,
		0x0440008010200000ULL, 0x0540008010200000ULL, 0x2440008010200000ULL, 0x2540008010200000ULL,
		0x0004000010000000ULL, 0x0104000010000000ULL, 0x2004000010000000ULL, 0x2104000010000000ULL,
		0x0004008010000000ULL, 0x0104008010000000ULL, 0x2004008010000000ULL, 0x2104008010000000ULL,
		0x0004000010200000ULL, 0x0104000010200000ULL, 0x2004000010200000ULL, 0x2104000010200000ULL,
		0x0004008010200000ULL, 0x0104008010200000ULL, 0x2004008010200000ULL, 0x2104008010200000ULL,
		0x0044000010000000ULL, 0x0144000010000000ULL, 0x2044000010000000ULL, 0x2144000010000000ULL,
		0x0044008010000000ULL, 0x0144008010000000ULL, 0x2044008010000000ULL, 0x2144008010000000ULL,
		0x0044000010200000ULL, 0x0144000010200000ULL, 0x2044000010200000ULL, 0x2144000010200000ULL,
		0x0044008010200000ULL, 0x0144008010200000ULL, 0x2044008010200000ULL, 0x2144008010200000ULL,
		0x0404000010000000ULL, 0x0504000010000000ULL, 0x2404000010000000ULL, 0x2504000010000000ULL,
		0x0404008010000000ULL, 0x0504008010000000ULL, 0x2404008010000000ULL, 0x2504008010000000ULL,
		0x0404000010200000ULL, 0x0504000010200000ULL, 0x2404000010200000ULL, 0x2504000010200000ULL,
		0x0404008010200000ULL, 0x0504008010200000ULL, 0x2404008010200000ULL, 0x2504008010200000ULL,
		0x0444000010000000ULL, 0x0544000010000000ULL, 0x2444000010000000ULL, 0x2544000010000000ULL,
		0x0444008010000000ULL, 0x0544008010000000ULL, 0x2444008010000000ULL, 0x2544008010000000ULL,
		0x0444000010200000ULL, 0x0544000010200000ULL, 0x2444000010200000ULL, 0x2544000010200000ULL,
		0x0444008010200000ULL, 0x0544008010200000ULL, 0x2444008010200000ULL, 0x2544008010200000ULL,
	},
	{
		0x0000000000000000ULL, 0x0000000000000080ULL, 0x0000000020000000ULL, 0x0000000020000080ULL,
		0x0008000000000000ULL, 0x0008000000000080ULL, 0x0008000020000000ULL, 0x0008000020000080ULL,
		0x0000000000000040ULL, 0x00000000000000c0ULL, 0x0000000020000040ULL, 0x00000000200000c0ULL,
		0x0008000000000040ULL, 0x00080000000000c0ULL, 0x0008000020000040ULL, 0x00080000200000c0ULL,
		0x0000000200000000ULL, 0x0000000200000080ULL, 0x0000000220000000ULL, 0x0000000220000080ULL,
		0x0008000200000000ULL, 0x0008000200000080ULL, 0x0008000220000000ULL, 0x0008000220000080ULL,
		0x0000000200000040ULL, 0x00000002000000c0ULL, 0x0000000220000040ULL, 0x00000002200000c0ULL,
		0x0008000200000040ULL, 0x00080002000000c0ULL, 0x0008000220000040ULL, 0x00080002200000c0ULL,
		0x0000000800000000ULL, 0x0000000800000080ULL, 0x0000000820000000ULL, 0x0000000820000080ULL,
		0x0008000800000000ULL, 0x0008000800000080ULL, 0x0008000820000000ULL, 0x0008000820000080ULL,
		0x0000000800000040ULL, 0x00000008000000c0ULL, 0x0000000820000040ULL, 0x00000008200000c0ULL,
		0x0008000800000040ULL, 0x00080008000000c0ULL, 0x0008000820000040ULL, 0x00080008200000c0ULL,
		0x0000000a00000000ULL, 0x0000000a00000080ULL, 0x0000000a20000000ULL, 0x0000000a20000080ULL,
		0x0008000a00000000ULL, 0x0008000a00000080ULL, 0x0008000a20000000ULL, 0x0008000a20000080ULL,
		0x0000000a00000040ULL, 0x0000000a000000c0ULL, 0x0000000a20000040ULL, 0x0000000a200000c0ULL,
		0x0008000a00000040ULL, 0x0008000a000000c0ULL, 0x0008000a20000040ULL, 0x0008000a200000c0ULL,
		0x0000000000100000ULL, 0x0000000000100080ULL, 0x0000000020100000ULL, 0x0000000020100080ULL,
		0x0008000000100000ULL, 0x0008000000100080ULL, 0x0008000020100000ULL, 0x0008000020100080ULL,
		0x0000000000100040ULL, 0x00000000001000c0ULL, 0x0000000020100040ULL, 0x00000000201000c0ULL,
		0x0008000000100040ULL, 0x00080000001000c0ULL, 0x0008000020100040ULL, 0x00080000201000c0ULL,
		0x0000000200100000ULL, 0x0000000200100080ULL, 0x0000000220100000ULL, 0x0000000220100080ULL,
		0x0008000200100000ULL, 0x0008000200100080ULL, 0x0008000220100000ULL, 0x0008000220100080ULL,
		0x0000000200100040ULL, 0x00000002001000c0ULL, 0x0000000220100040ULL, 0x00000002201000c0ULL,
		0x0008000200100040ULL, 0x00080002001000c0ULL, 0x0008000220100040ULL, 0x00080002201000c0ULL,
		0x0000000800100000ULL, 0x0000000800100080ULL, 0x0000000820100000ULL, 0x0000000820100080ULL,
		0x0008000800100000ULL, 0x0008000800100080ULL, 0x0008000820100000ULL, 0x0008000820100080ULL,
		0x0000000800100040ULL, 0x00000008001000c0ULL, 0x0000000820100040ULL, 0x00000008201000c0ULL,
		0x0008000800100040ULL, 0x00080008001000c0ULL, 0x0008000820100040ULL, 0x00080008201000c0ULL,
		0x0000000a00100000ULL, 0x0000000a00100080ULL, 0x0000000a20100000ULL, 0x0000000a20100080ULL,
		0x0008000a00100000ULL, 0x0008000a00100080ULL, 0x0008000a20100000ULL, 0x0008000a20100080ULL,
		0x0000000a00100040ULL, 0x0000000a001000c0ULL, 0x0000000a20100040ULL, 0x0000000a201000c0ULL,
		0x0008000a00100040ULL, 0x0008000a001000c0ULL, 0x0008000a20100040ULL, 0x0008000a201000c0ULL,
		0x0000000000010000ULL, 0x0000000000010080ULL, 0x0000000020010000ULL, 0x0000000020010080ULL,
		0x0008000000010000ULL, 0x0008000000010080ULL, 0x0008000020010000ULL, 0x0008000020010080ULL,
		0x0000000000010040ULL, 0x00000000000100c0ULL, 0x0000000020010040ULL, 0x00000000200100c0ULL,
		0x0008000000010040ULL, 0x00080000000100c0ULL, 0x0008000020010040ULL, 0x00080000200100c0ULL,
		0x0000000200010000ULL, 0x0000000200010080ULL, 0x0000000220010000ULL, 0x0000000220010080ULL,
		0x0008000200010000ULL, 0x0008000200010080ULL, 0x0008000220010000ULL, 0x0008000220010080ULL,
		0x0000000200010040ULL, 0x00000002000100c0ULL, 0x0000000220010040ULL, 0x00000002200100c0ULL,
		0x0008000200010040ULL, 0x00080002000100c0ULL, 0x0008000220010040ULL, 0x00080002200100c0ULL,
		0x0000000800010000ULL, 0x0000000800010080ULL, 0x0000000820010000ULL, 0x0000000820010080ULL,
		0x0008000800010000ULL, 0x0008000800010080ULL, 0x0008000820010000ULL, 0x0008000820010080ULL,
		0x0000000800010040ULL, 0x00000008000100c0ULL, 0x0000000820010040ULL, 0x00000008200100c0ULL,
		0x0008000800010040ULL, 0x00080008000100c0ULL, 0x0008000820010040ULL, 0x00080008200100c0ULL,
		0x0000000a00010000ULL, 0x0000000a00010080ULL, 0x0000000a20010000ULL, 0x0000000a20010080ULL,
		0x0008000a00010000ULL, 0x0008000a00010080ULL, 0x0008000a20010000ULL, 0x0008000a20010080ULL,
		0x0000000a00010040ULL, 0x0000000a000100c0ULL, 0x0000000a20010040ULL, 0x0000000a200100c0ULL,
		0x0008000a00010040ULL, 0x0008000a000100c0ULL, 0x0008000a20010040ULL, 0x0008000a200100c0ULL,
		0x0000000000110000ULL, 0x0000000000110080ULL, 0x0000000020110000ULL, 0x0000000020110080ULL,
		0x0008000000110000ULL, 0x0008000000110080ULL, 0x0008000020110000ULL, 0x0008000020110080ULL,
		0x0000000000110040ULL, 0x00000000001100c0ULL, 0x0000000020110040ULL, 0x00000000201100c0ULL,
		0x0008000000110040ULL, 0x00080000001100c0ULL, 0x0008000020110040ULL, 0x00080000201100c0ULL,
		0x0000000200110000ULL, 0x0000000200110080ULL, 0x0000000220110000ULL, 0x0000000220110080ULL,
		0x0008000200110000ULL, 0x0008000200110080ULL, 0x0008000220110000ULL, 0x0008000220110080ULL,
		0x0000000200110040ULL, 0x00000002001100c0ULL, 0x0000000220110040ULL, 0x00000002201100c0ULL,
		0x0008000200110040ULL, 0x00080002001100c0ULL, 0x0008000220110040ULL, 0x00080002201100c0ULL,
		0x0000000800110000ULL, 0x0000000800110080ULL, 0x0000000820110000ULL, 0x0000000820110080ULL,
		0x0008000800110000ULL, 0x0008000800110080ULL, 0x0008000820110000ULL, 0x0008000820110080ULL,
		0x0000000800110040ULL, 0x00000008001100c0ULL, 0x0000000820110040ULL, 0x00000008201100c0ULL,
		0x0008000800110040ULL, 0x00080008001100c0ULL, 0x0008000820110040ULL, 0x00080008201100c0ULL,
		0x0000000a00110000ULL, 0x0000000a00110080ULL, 0x0000000a20110000ULL, 0x0000000a20110080ULL,
		0x0008000a00110000ULL, 0x0008000a00110080ULL, 0x0008000a20110000ULL, 0x0008000a20110080ULL,
		0x0000000a00110040ULL, 0x0000000a001100c0ULL, 0x0000000a20110040ULL, 0x0000000a201100c0ULL,
		0x0008000a00110040ULL, 0x0008000a001100c0ULL, 0x0008000a20110040ULL, 0x0008000a201100c0ULL,
	},
	{
		0x0000000000000000ULL, 0x0000800000000000ULL, 0x0000000040000000ULL, 0x0000800040000000ULL,
		0x0000000100000000ULL, 0x0000800100000000ULL, 0x0000000140000000ULL, 0x0000800140000000ULL,
		0x8000000000000000ULL, 0x8000800000000000ULL, 0x8000000040000000ULL, 0x8000800040000000ULL,
		0x8000000100000000ULL, 0x8000800100000000ULL, 0x8000000140000000ULL, 0x8000800140000000ULL,
		0x0000000000000400ULL, 0x0000800000000400ULL, 0x0000000040000400ULL, 0x0000800040000400ULL,
		0x0000000100000400ULL, 0x0000800100000400ULL, 0x0000000140000400ULL, 0x0000800140000400ULL,
		0x8000000000000400ULL, 0x8000800000000400ULL, 0x8000000040000400ULL, 0x8000800040000400ULL,
		0x8000000100000400ULL, 0x8000800100000400ULL, 0x8000000140000400ULL, 0x8000800140000400ULL,
		0x0000000000000800ULL, 0x0000800000000800ULL, 0x0000000040000800ULL, 0x0000800040000800ULL,
		0x0000000100000800ULL, 0x0000800100000800ULL, 0x0000000140000800ULL, 0x0000800140000800ULL,
		0x8000000000000800ULL, 0x8000800000000800ULL, 0x8000000040000800ULL, 0x8000800040000800ULL,
		0x8000000100000800ULL, 0x8000800100000800ULL, 0x8000000140000800ULL, 0x8000800140000800ULL,
		0x0000000000000c00ULL, 0x0000800000000c00ULL, 0x0000000040000c00ULL, 0x0000800040000c00ULL,
		0x0000000100000c00ULL, 0x0000800100000c00ULL, 0x0000000140000c00ULL, 0x0000800140000c00ULL,
		0x8000000000000c00ULL, 0x8000800000000c00ULL, 0x8000000040000c00ULL, 0x8000800040000c00ULL,
		0x8000000100000c00ULL, 0x8000800100000c00ULL, 0x8000000140000c00ULL, 0x8000800140000c00ULL,
		0x0000000000000010ULL, 0x0000800000000010ULL, 0x0000000040000010ULL, 0x0000800040000010ULL,
		0x0000000100000010ULL, 0x0000800100000010ULL, 0x0000000140000010ULL, 0x0000800140000010ULL,
		0x8000000000000010ULL, 0x8000800000000010ULL, 0x8000000040000010ULL, 0x8000800040000010ULL,
		0x8000000100000010ULL, 0x8000800100000010ULL, 0x8000000140000010ULL, 0x8000800140000010ULL,
		0x0000000000000410ULL, 0x0000800000000410ULL, 0x0000000040000410ULL, 0x0000800040000410ULL,
		0x0000000100000410ULL, 0x0000800100000410ULL, 0x0000000140000410ULL, 0x0000800140000410ULL,
		0x8000000000000410ULL, 0x8000800000000410ULL, 0x8000000040000410ULL, 0x8000800040000410ULL,
		0x8000000100000410ULL, 0x8000800100000410ULL, 0x8000000140000410ULL, 0x8000800140000410ULL,
		0x0000000000000810ULL, 0x0000800000000810ULL, 0x0000000040000810ULL, 0x0000800040000810ULL,
		0x0000000100000810ULL, 0x0000800100000810ULL, 0x0000000140000810ULL, 0x0000800140000810ULL,
		0x8000000000000810ULL, 0x8000800000000810ULL, 0x8000000040000810ULL, 0x8000800040000810ULL,
		0x8000000100000810ULL, 0x8000800100000810ULL, 0x8000000140000810ULL, 0x8000800140000810ULL,
		0x0000000000000c10ULL, 0x0000800000000c10ULL, 0x0000000040000c10ULL, 0x0000800040000c10ULL,
		0x0000000100000c10ULL, 0x0000800100000c10ULL, 0x0000000140000c10ULL, 0x0000800140000c10ULL,
		0x8000000000000c10ULL, 0x8000800000000c10ULL, 0x8000000040000c10ULL, 0x8000800040000c10ULL,
		0x8000000100000c10ULL, 0x8000800100000c10ULL, 0x8000000140000c10ULL, 0x8000800140000c10ULL,
		0x0000004000000000ULL, 0x0000804000000000ULL, 0x0000004040000000ULL, 0x0000804040000000ULL,
		0x0000004100000000ULL, 0x0000804100000000ULL, 0x0000004140000000ULL, 0x0000804140000000ULL,
		0x8000004000000000ULL, 0x8000804000000000ULL, 0x8000004040000000ULL, 0x8000804040000000ULL,
		0x8000004100000000ULL, 0x8000804100000000ULL, 0x8000004140000000ULL, 0x8000804140000000ULL,
		0x0000004000000400ULL, 0x0000804000000400ULL, 0x0000004040000400ULL, 0x0000804040000400ULL,
		0x0000004100000400ULL, 0x0000804100000400ULL, 0x0000004140000400ULL, 0x0000804140000400ULL,
		0x8000004000000400ULL, 0x8000804000000400ULL, 0x8000004040000400ULL, 0x8000804040000400ULL,
		0x8000004100000400ULL, 0x8000804100000400ULL, 0x8000004140000400ULL, 0x8000804140000400ULL,
		0x0000004000000800ULL, 0x0000804000000800ULL, 0x0000004040000800ULL, 0x0000804040000800ULL,
		0x0000004100000800ULL, 0x0000804100000800ULL, 0x0000004140000800ULL, 0x0000804140000800ULL,
		0x8000004000000800ULL, 0x8000804000000800ULL, 0x8000004040000800ULL, 0x8000804040000800ULL,
		0x8000004100000800ULL, 0x8000804100000800ULL, 0x8000004140000800ULL, 0x8000804140000800ULL,
		0x0000004000000c00ULL, 0x0000804000000c00ULL, 0x0000004040000c00ULL, 0x0000804040000c00ULL,
		0x0000004100000c00ULL, 0x0000804100000c00ULL, 0x0000004140000c00ULL, 0x0000804140000c00ULL,
		0x8000004000000c00ULL, 0x8000804000000c00ULL, 0x8000004040000c00ULL, 0x8000804040000c00ULL,
		0x8000004100000c00ULL, 0x8000804100000c00ULL, 0x8000004140000c00ULL, 0x8000804140000c00ULL,
		0x0000004000000010ULL, 0x0000804000000010ULL, 0x0000004040000010ULL, 0x0000804040000010ULL,
		0x0000004100000010ULL, 0x0000804100000010ULL, 0x0000004140000010ULL, 0x0000804140000010ULL,
		0x8000004000000010ULL, 0x8000804000000010ULL, 0x8000004040000010ULL, 0x8000804040000010ULL,
		0x8000004100000010ULL, 0x8000804100000010ULL, 0x8000004140000010ULL, 0x8000804140000010ULL,
		0x0000004000000410ULL, 0x0000804000000410ULL, 0x0000004040000410ULL, 0x0000804040000410ULL,
		0x0000004100000410ULL, 0x0000804100000410ULL, 0x0000004140000410ULL, 0x0000804140000410ULL,
		0x8000004000000410ULL, 0x8000804000000410ULL, 0x8000004040000410ULL, 0x8000804040000410ULL,
		0x8000004100000410ULL, 0x8000804100000410ULL, 0x8000004140000410ULL, 0x8000804140000410ULL,
		0x0000004000000810ULL, 0x0000804000000810ULL, 0x0000004040000810ULL, 0x0000804040000810ULL,
		0x0000004100000810ULL, 0x0000804100000810ULL, 0x0000004140000810ULL, 0x0000804140000810ULL,
		0x8000004000000810ULL, 0x8000804000000810ULL, 0x8000004040000810ULL, 0x8000804040000810ULL,
		0x8000004100000810ULL, 0x8000804100000810ULL, 0x8000004140000810ULL, 0x8000804140000810ULL,
		0x0000004000000c10ULL, 0x0000804000000c10ULL, 0x0000004040000c10ULL, 0x0000804040000c10ULL,
		0x0000004100000c10ULL, 0x0000804100000c10ULL, 0x0000004140000c10ULL, 0x0000804140000c10ULL,
		0x8000004000000c10ULL, 0x8000804000000c10ULL, 0x8000004040000c10ULL, 0x8000804040000c10ULL,
		0x8000004100000c10ULL, 0x8000804100000c10ULL, 0x8000004140000c10ULL, 0x8000804140000c10ULL,
	},
	{
		0x0000000000000000ULL, 0x4000000000000000ULL, 0x0000000004000000ULL, 0x4000000004000000ULL,
		0x0000010000000000ULL, 0x4000010000000000ULL, 0x0000010004000000ULL, 0x4000010004000000ULL,
		0x0000000000040000ULL, 0x4000000000040000ULL, 0x0000000004040000ULL, 0x4000000004040000ULL,
		0x0000010000040000ULL, 0x4000010000040000ULL, 0x0000010004040000ULL, 0x4000010004040000ULL,
		0x0000000000001000ULL, 0x4000000000001000ULL, 0x0000000004001000ULL, 0x4000000004001000ULL,
		0x0000010000001000ULL, 0x4000010000001000ULL, 0x0000010004001000ULL, 0x4000010004001000ULL,
		0x0000000000041000ULL, 0x4000000000041000ULL, 0x0000000004041000ULL, 0x4000000004041000ULL,
		0x0000010000041000ULL, 0x4000010000041000ULL, 0x0000010004041000ULL, 0x4000010004041000ULL,
		0x0010000000000000ULL, 0x4010000000000000ULL, 0x0010000004000000ULL, 0x4010000004000000ULL,
		0x0010010000000000ULL, 0x4010010000000000ULL, 0x0010010004000000ULL, 0x4010010004000000ULL,
		0x0010000000040000ULL, 0x4010000000040000ULL, 0x0010000004040000ULL, 0x4010000004040000ULL,
		0x0010010000040000ULL, 0x4010010000040000ULL, 0x0010010004040000ULL, 0x4010010004040000ULL,
		0x0010000000001000ULL, 0x4010000000001000ULL, 0x0010000004001000ULL, 0x4010000004001000ULL,
		0x0010010000001000ULL, 0x4010010000001000ULL, 0x0010010004001000ULL, 0x4010010004001000ULL,
		0x0010000000041000ULL, 0x4010000000041000ULL, 0x0010000004041000ULL, 0x4010000004041000ULL,
		0x0010010000041000ULL, 0x4010010000041000ULL, 0x0010010004041000ULL, 0x4010010004041000ULL,
		0x0000002000000000ULL, 0x4000002000000000ULL, 0x0000002004000000ULL, 0x4000002004000000ULL,
		0x0000012000000000ULL, 0x4000012000000000ULL, 0x0000012004000000ULL, 0x4000012004000000ULL,
		0x0000002000040000ULL, 0x4000002000040000ULL, 0x0000002004040000ULL, 0x4000002004040000ULL,
		0x0000012000040000ULL, 0x4000012000040000ULL, 0x0000012004040000ULL, 0x4000012004040000ULL,
		0x0000002000001000ULL, 0x4000002000001000ULL, 0x0000002004001000ULL, 0x4000002004001000ULL,
		0x0000012000001000ULL, 0x4000012000001000ULL, 0x0000012004001000ULL, 0x4000012004001000ULL,
		0x0000002000041000ULL, 0x4000002000041000ULL, 0x0000002004041000ULL, 0x4000002004041000ULL,
		0x0000012000041000ULL, 0x4000012000041000ULL, 0x0000012004041000ULL, 0x4000012004041000ULL,
		0x0010002000000000ULL, 0x4010002000000000ULL, 0x0010002004000000ULL, 0x4010002004000000ULL,
		0x0010012000000000ULL, 0x4010012000000000ULL, 0x0010012004000000ULL, 0x4010012004000000ULL,
		0x0010002000040000ULL, 0x4010002000040000ULL, 0x0010002004040000ULL, 0x4010002004040000ULL,
		0x0010012000040000ULL, 0x4010012000040000ULL, 0x0010012004040000ULL, 0x4010012004040000ULL,
		0x0010002000001000ULL, 0x4010002000001000ULL, 0x0010002004001000ULL, 0x4010002004001000ULL,
		0x0010012000001000ULL, 0x4010012000001000ULL, 0x0010012004001000ULL, 0x4010012004001000ULL,
		0x0010002000041000ULL, 0x4010002000041000ULL, 0x0010002004041000ULL, 0x4010002004041000ULL,
		0x0010012000041000ULL, 0x4010012000041000ULL, 0x0010012004041000ULL, 0x4010012004041000ULL,
		0x0020000000000000ULL, 0x4020000000000000ULL, 0x0020000004000000ULL, 0x4020000004000000ULL,
		0x0020010000000000ULL, 0x4020010000000000ULL, 0x0020010004000000ULL, 0x4020010004000000ULL,
		0x0020000000040000ULL, 0x4020000000040000ULL, 0x0020000004040000ULL, 0x4020000004040000ULL,
		0x0020010000040000ULL, 0x4020010000040000ULL, 0x0020010004040000ULL, 0x4020010004040000ULL,
		0x0020000000001000ULL, 0x4020000000001000ULL, 0x0020000004001000ULL, 0x4020000004001000ULL,
		0x0020010000001000ULL, 0x4020010000001000ULL, 0x0020010004001000ULL, 0x4020010004001000ULL,
		0x0020000000041000ULL, 0x4020000000041000ULL, 0x0020000004041000ULL, 0x4020000004041000ULL,
		0x0020010000041000ULL, 0x4020010000041000ULL, 0x0020010004041000ULL, 0x4020010004041000ULL,
		0x0030000000000000ULL, 0x4030000000000000ULL, 0x0030000004000000ULL, 0x4030000004000000ULL,
		0x0030010000000000ULL, 0x4030010000000000ULL, 0x0030010004000000ULL, 0x4030010004000000ULL,
		0x0030000000040000ULL, 0x4030000000040000ULL, 0x0030000004040000ULL, 0x4030000004040000ULL,
		0x0030010000040000ULL, 0x4030010000040000ULL, 0x0030010004040000ULL, 0x4030010004040000ULL,
		0x0030000000001000ULL, 0x4030000000001000ULL, 0x0030000004001000ULL, 0x4030000004001000ULL,
		0x0030010000001000ULL, 0x4030010000001000ULL, 0x0030010004001000ULL, 0x4030010004001000ULL,
		0x0030000000041000ULL, 0x4030000000041000ULL, 0x0030000004041000ULL, 0x4030000004041000ULL,
		0x0030010000041000ULL, 0x4030010000041000ULL, 0x0030010004041000ULL, 0x4030010004041000ULL,
		0x0020002000000000ULL, 0x4020002000000000ULL, 0x0020002004000000ULL, 0x4020002004000000ULL,
		0x0020012000000000ULL, 0x4020012000000000ULL, 0x0020012004000000ULL, 0x4020012004000000ULL,
		0x0020002000040000ULL, 0x4020002000040000ULL, 0x0020002004040000ULL, 0x4020002004040000ULL,
		0x0020012000040000ULL, 0x4020012000040000ULL, 0x0020012004040000ULL, 0x4020012004040000ULL,
		0x0020002000001000ULL, 0x4020002000001000ULL, 0x0020002004001000ULL, 0x4020002004001000ULL,
		0x0020012000001000ULL, 0x4020012000001000ULL, 0x0020012004001000ULL, 0x4020012004001000ULL,
		0x0020002000041000ULL, 0x4020002000041000ULL, 0x0020002004041000ULL, 0x4020002004041000ULL,
		0x0020012000041000ULL, 0x4020012000041000ULL, 0x0020012004041000ULL, 0x4020012004041000ULL,
		0x0030002000000000ULL, 0x4030002000000000ULL, 0x0030002004000000ULL, 0x4030002004000000ULL,
		0x0030012000000000ULL, 0x4030012000000000ULL, 0x0030012004000000ULL, 0x4030012004000000ULL,
		0x0030002000040000ULL, 0x4030002000040000ULL, 0x0030002004040000ULL, 0x4030002004040000ULL,
		0x0030012000040000ULL, 0x4030012000040000ULL, 0x0030012004040000ULL, 0x4030012004040000ULL,
		0x0030002000001000ULL, 0x4030002000001000ULL, 0x0030002004001000ULL, 0x4030002004001000ULL,
		0x0030012000001000ULL, 0x4030012000001000ULL, 0x0030012004001000ULL, 0x4030012004001000ULL,
		0x0030002000041000ULL, 0x4030002000041000ULL, 0x0030002004041000ULL, 0x4030002004041000ULL,
		0x0030012000041000ULL, 0x4030012000041000ULL, 0x0030012004041000ULL, 0x4030012004041000ULL,
	},
	{
		0x0000000000000000ULL, 0x0000000000800000ULL, 0x0800000000000000ULL, 0x0800000000800000ULL,
		0x0000020000000000ULL, 0x0000020000800000ULL, 0x0800020000000000ULL, 0x0800020000800000ULL,
		0x0000000000020000ULL, 0x0000000000820000ULL, 0x0800000000020000ULL, 0x0800000000820000ULL,
		0x0000020000020000ULL, 0x0000020000820000ULL, 0x0800020000020000ULL, 0x0800020000820000ULL,
		0x0000000080000000ULL, 0x0000000080800000ULL, 0x0800000080000000ULL, 0x0800000080800000ULL,
		0x0000020080000000ULL, 0x0000020080800000ULL, 0x0800020080000000ULL, 0x0800020080800000ULL,
		0x0000000080020000ULL, 0x0000000080820000ULL, 0x0800000080020000ULL, 0x0800000080820000ULL,
		0x0000020080020000ULL, 0x0000020080820000ULL, 0x0800020080020000ULL, 0x0800020080820000ULL,
		0x0000000000000001ULL, 0x0000000000800001ULL, 0x0800000000000001ULL, 0x0800000000800001ULL,
		0x0000020000000001ULL, 0x0000020000800001ULL, 0x0800020000000001ULL, 0x0800020000800001ULL,
		0x0000000000020001ULL, 0x0000000000820001ULL, 0x0800000000020001ULL, 0x0800000000820001ULL,
		0x0000020000020001ULL, 0x0000020000820001ULL, 0x0800020000020001ULL, 0x0800020000820001ULL,
		0x0000000080000001ULL, 0x0000000080800001ULL, 0x0800000080000001ULL, 0x0800000080800001ULL,
		0x0000020080000001ULL, 0x0000020080800001ULL, 0x0800020080000001ULL, 0x0800020080800001ULL,
		0x0000000080020001ULL, 0x0000000080820001ULL, 0x0800000080020001ULL, 0x0800000080820001ULL,
		0x0000020080020001ULL, 0x0000020080820001ULL, 0x0800020080020001ULL, 0x0800020080820001ULL,
		0x0000000002000000ULL, 0x0000000002800000ULL, 0x0800000002000000ULL, 0x0800000002800000ULL,
		0x0000020002000000ULL, 0x0000020002800000ULL, 0x0800020002000000ULL, 0x0800020002800000ULL,
		0x0000000002020000ULL, 0x0000000002820000ULL, 0x0800000002020000ULL, 0x0800000002820000ULL,
		0x0000020002020000ULL, 0x0000020002820000ULL, 0x0800020002020000ULL, 0x0800020002820000ULL,
		0x0000000082000000ULL, 0x0000000082800000ULL, 0x0800000082000000ULL, 0x0800000082800000ULL,
		0x0000020082000000ULL, 0x0000020082800000ULL, 0x0800020082000000ULL, 0x0800020082800000ULL,
		0x0000000082020000ULL, 0x0000000082820000ULL, 0x0800000082020000ULL, 0x0800000082820000ULL,
		0x0000020082020000ULL, 0x0000020082820000ULL, 0x0800020082020000ULL, 0x0800020082820000ULL,
		0x0000000002000001ULL, 0x0000000002800001ULL, 0x0800000002000001ULL, 0x0800000002800001ULL,
		0x0000020002000001ULL, 0x0000020002800001ULL, 0x0800020002000001ULL, 0x0800020002800001ULL,
		0x0000000002020001ULL, 0x0000000002820001ULL, 0x0800000002020001ULL, 0x0800000002820001ULL,
		0x0000020002020001ULL, 0x0000020002820001ULL, 0x0800020002020001ULL, 0x0800020002820001ULL,
		0x0000000082000001ULL, 0x0000000082800001ULL, 0x0800000082000001ULL, 0x0800000082800001ULL,
		0x0000020082000001ULL, 0x0000020082800001ULL, 0x0800020082000001ULL, 0x0800020082800001ULL,
		0x0000000082020001ULL, 0x0000000082820001ULL, 0x0800000082020001ULL, 0x0800000082820001ULL,
		0x0000020082020001ULL, 0x0000020082820001ULL, 0x0800020082020001ULL, 0x0800020082820001ULL,
		0x0000080000000000ULL, 0x0000080000800000ULL, 0x0800080000000000ULL, 0x0800080000800000ULL,
		0x00000a0000000000ULL, 0x00000a0000800000ULL, 0x08000a0000000000ULL, 0x08000a0000800000ULL,
		0x0000080000020000ULL, 0x0000080000820000ULL, 0x0800080000020000ULL, 0x0800080000820000ULL,
		0x00000a0000020000ULL, 0x00000a0000820000ULL, 0x08000a0000020000ULL, 0x08000a0000820000ULL,
		0x0000080080000000ULL, 0x0000080080800000ULL, 0x0800080080000000ULL, 0x0800080080800000ULL,
		0x00000a0080000000ULL, 0x00000a0080800000ULL, 0x08000a0080000000ULL, 0x08000a0080800000ULL,
		0x0000080080020000ULL, 0x0000080080820000ULL, 0x0800080080020000ULL, 0x0800080080820000ULL,
		0x00000a0080020000ULL, 0x00000a0080820000ULL, 0x08000a0080020000ULL, 0x08000a0080820000ULL,
		0x0000080000000001ULL, 0x0000080000800001ULL, 0x0800080000000001ULL, 0x0800080000800001ULL,
		0x00000a0000000001ULL, 0x00000a0000800001ULL, 0x08000a0000000001ULL, 0x08000a0000800001ULL,
		0x0000080000020001ULL, 0x0000080000820001ULL, 0x0800080000020001ULL, 0x0800080000820001ULL,
		0x00000a0000020001ULL, 0x00000a0000820001ULL, 0x08000a0000020001ULL, 0x08000a0000820001ULL,
		0x0000080080000001ULL, 0x0000080080800001ULL, 0x0800080080000001ULL, 0x0800080080800001ULL,
		0x00000a0080000001ULL, 0x00000a0080800001ULL, 0x08000a0080000001ULL, 0x08000a0080800001ULL,
		0x0000080080020001ULL, 0x0000080080820001ULL, 0x0800080080020001ULL, 0x0800080080820001ULL,
		0x00000a0080020001ULL, 0x00000a0080820001ULL, 0x08000a0080020001ULL, 0x08000a0080820001ULL,
		0x0000080002000000ULL, 0x0000080002800000ULL, 0x0800080002000000ULL, 0x0800080002800000ULL,
		0x00000a0002000000ULL, 0x00000a0002800000ULL, 0x08000a0002000000ULL, 0x08000a0002800000ULL,
		0x0000080002020000ULL, 0x0000080002820000ULL, 0x0800080002020000ULL, 0x0800080002820000ULL,
		0x00000a0002020000ULL, 0x00000a0002820000ULL, 0x08000a0002020000ULL, 0x08000a0002820000ULL,
		0x0000080082000000ULL, 0x0000080082800000ULL, 0x0800080082000000ULL, 0x0800080082800000ULL,
		0x00000a0082000000ULL, 0x00000a0082800000ULL, 0x08000a0082000000ULL, 0x08000a0082800000ULL,
		0x0000080082020000ULL, 0x0000080082820000ULL, 0x0800080082020000ULL, 0x0800080082820000ULL,
		0x00000a0082020000ULL, 0x00000a0082820000ULL, 0x08000a0082020000ULL, 0x08000a0082820000ULL,
		0x0000080002000001ULL, 0x0000080002800001ULL, 0x0800080002000001ULL, 0x0800080002800001ULL,
		0x00000a0002000001ULL, 0x00000a0002800001ULL, 0x08000a0002000001ULL, 0x08000a0002800001ULL,
		0x0000080002020001ULL, 0x0000080002820001ULL, 0x0800080002020001ULL, 0x0800080002820001ULL,
		0x00000a0002020001ULL, 0x00000a0002820001ULL, 0x08000a0002020001ULL, 0x08000a0002820001ULL,
		0x0000080082000001ULL, 0x0000080082800001ULL, 0x0800080082000001ULL, 0x0800080082800001ULL,
		0x00000a0082000001ULL, 0x00000a0082800001ULL, 0x08000a0082000001ULL, 0x08000a0082800001ULL,
		0x0000080082020001ULL, 0x0000080082820001ULL, 0x0800080082020001ULL, 0x0800080082820001ULL,
		0x00000a0082020001ULL, 0x00000a0082820001ULL, 0x08000a0082020001ULL, 0x08000a0082820001ULL,
	},
	{
		0x0000000000000000ULL, 0x0000100000000000ULL, 0x0000000000004000ULL, 0x0000100000004000ULL,
		0x0000000000000004ULL, 0x0000100000000004ULL, 0x0000000000004004ULL, 0x0000100000004004ULL,
		0x0000000000002000ULL, 0x0000100000002000ULL, 0x0000000000006000ULL, 0x0000100000006000ULL,
		0x0000000000002004ULL, 0x0000100000002004ULL, 0x0000000000006004ULL, 0x0000100000006004ULL,
		0x0000200000000000ULL, 0x0000300000000000ULL, 0x0000200000004000ULL, 0x0000300000004000ULL,
		0x0000200000000004ULL, 0x0000300000000004ULL, 0x0000200000004004ULL, 0x0000300000004004ULL,
		0x0000200000002000ULL, 0x0000300000002000ULL, 0x0000200000006000ULL, 0x0000300000006000ULL,
		0x0000200000002004ULL, 0x0000300000002004ULL, 0x0000200000006004ULL, 0x0000300000006004ULL,
		0x0001000000000000ULL, 0x0001100000000000ULL, 0x0001000000004000ULL, 0x0001100000004000ULL,
		0x0001000000000004ULL, 0x0001100000000004ULL, 0x0001000000004004ULL, 0x0001100000004004ULL,
		0x0001000000002000ULL, 0x0001100000002000ULL, 0x0001000000006000ULL, 0x0001100000006000ULL,
		0x0001000000002004ULL, 0x0001100000002004ULL, 0x0001000000006004ULL, 0x0001100000006004ULL,
		0x0001200000000000ULL, 0x0001300000000000ULL, 0x0001200000004000ULL, 0x0001300000004000ULL,
		0x0001200000000004ULL, 0x0001300000000004ULL, 0x0001200000004004ULL, 0x0001300000004004ULL,
		0x0001200000002000ULL, 0x0001300000002000ULL, 0x0001200000006000ULL, 0x0001300000006000ULL,
		0x0001200000002004ULL, 0x0001300000002004ULL, 0x0001200000006004ULL, 0x0001300000006004ULL,
		0x0000000000000008ULL, 0x0000100000000008ULL, 0x0000000000004008ULL, 0x0000100000004008ULL,
		0x000000000000000cULL, 0x000010000000000cULL, 0x000000000000400cULL, 0x000010000000400cULL,
		0x0000000000002008ULL, 0x0000100000002008ULL, 0x0000000000006008ULL, 0x0000100000006008ULL,
		0x000000000000200cULL, 0x000010000000200cULL, 0x000000000000600cULL, 0x000010000000600cULL,
		0x0000200000000008ULL, 0x0000300000000008ULL, 0x0000200000004008ULL, 0x0000300000004008ULL,
		0x000020000000000cULL, 0x000030000000000cULL, 0x000020000000400cULL, 0x000030000000400cULL,
		0x0000200000002008ULL, 0x0000300000002008ULL, 0x0000200000006008ULL, 0x0000300000006008ULL,
		0x000020000000200cULL, 0x000030000000200cULL, 0x000020000000600cULL, 0x000030000000600cULL,
		0x0001000000000008ULL, 0x0001100000000008ULL, 0x0001000000004008ULL, 0x0001100000004008ULL,
		0x000100000000000cULL, 0x000110000000000cULL, 0x000100000000400cULL, 0x000110000000400cULL,
		0x0001000000002008ULL, 0x0001100000002008ULL, 0x0001000000006008ULL, 0x0001100000006008ULL,
		0x000100000000200cULL, 0x000110000000200cULL, 0x000100000000600cULL, 0x000110000000600cULL,
		0x0001200000000008ULL, 0x0001300000000008ULL, 0x0001200000004008ULL, 0x0001300000004008ULL,
		0x000120000000000cULL, 0x000130000000000cULL, 0x000120000000400cULL, 0x000130000000400cULL,
		0x0001200000002008ULL, 0x0001300000002008ULL, 0x0001200000006008ULL, 0x0001300000006008ULL,
		0x000120000000200cULL, 0x000130000000200cULL, 0x000120000000600cULL, 0x000130000000600cULL,
		0x1000000000000000ULL, 0x1000100000000000ULL, 0x1000000000004000ULL, 0x1000100000004000ULL,
		0x1000000000000004ULL, 0x1000100000000004ULL, 0x1000000000004004ULL, 0x1000100000004004ULL,
		0x1000000000002000ULL, 0x1000100000002000ULL, 0x1000000000006000ULL, 0x1000100000006000ULL,
		0x1000000000002004ULL, 0x1000100000002004ULL, 0x1000000000006004ULL, 0x1000100000006004ULL,
		0x1000200000000000ULL, 0x1000300000000000ULL, 0x1000200000004000ULL, 0x1000300000004000ULL,
		0x1000200000000004ULL, 0x1000300000000004ULL, 0x1000200000004004ULL, 0x1000300000004004ULL,
		0x1000200000002000ULL, 0x1000300000002000ULL, 0x1000200000006000ULL, 0x1000300000006000ULL,
		0x1000200000002004ULL, 0x1000300000002004ULL, 0x1000200000006004ULL, 0x1000300000006004ULL,
		0x1001000000000000ULL, 0x1001100000000000ULL, 0x1001000000004000ULL, 0x1001100000004000ULL,
		0x1001000000000004ULL, 0x1001100000000004ULL, 0x1001000000004004ULL, 0x1001100000004004ULL,
		0x1001000000002000ULL, 0x1001100000002000ULL, 0x1001000000006000ULL, 0x1001100000006000ULL,
		0x1001000000002004ULL, 0x1001100000002004ULL, 0x1001000000006004ULL, 0x1001100000006004ULL,
		0x1001200000000000ULL, 0x1001300000000000ULL, 0x1001200000004000ULL, 0x1001300000004000ULL,
		0x1001200000000004ULL, 0x1001300000000004ULL, 0x1001200000004004ULL, 0x1001300000004004ULL,
		0x1001200000002000ULL, 0x1001300000002000ULL, 0x1001200000006000ULL, 0x1001300000006000ULL,
		0x1001200000002004ULL, 0x1001300000002004ULL, 0x1001200000006004ULL, 0x1001300000006004ULL,
		0x1000000000000008ULL, 0x1000100000000008ULL, 0x1000000000004008ULL, 0x1000100000004008ULL,
		0x100000000000000cULL, 0x100010000000000cULL, 0x100000000000400cULL, 0x100010000000400cULL,
		0x1000000000002008ULL, 0x1000100000002008ULL, 0x1000000000006008ULL, 0x1000100000006008ULL,
		0x100000000000200cULL, 0x100010000000200cULL, 0x100000000000600cULL, 0x100010000000600cULL,
		0x1000200000000008ULL, 0x1000300000000008ULL, 0x1000200000004008ULL, 0x1000300000004008ULL,
		0x100020000000000cULL, 0x100030000000000cULL, 0x100020000000400cULL, 0x100030000000400cULL,
		0x1000200000002008ULL, 0x1000300000002008ULL, 0x1000200000006008ULL, 0x1000300000006008ULL,
		0x100020000000200cULL, 0x100030000000200cULL, 0x100020000000600cULL, 0x100030000000600cULL,
		0x1001000000000008ULL, 0x1001100000000008ULL, 0x1001000000004008ULL, 0x1001100000004008ULL,
		0x100100000000000cULL, 0x100110000000000cULL, 0x100100000000400cULL, 0x100110000000400cULL,
		0x1001000000002008ULL, 0x1001100000002008ULL, 0x1001000000006008ULL, 0x1001100000006008ULL,
		0x100100000000200cULL, 0x100110000000200cULL, 0x100100000000600cULL, 0x100110000000600cULL,
		0x1001200000000008ULL, 0x1001300000000008ULL, 0x1001200000004008ULL, 0x1001300000004008ULL,
		0x100120000000000cULL, 0x100130000000000cULL, 0x100120000000400cULL, 0x100130000000400cULL,
		0x1001200000002008ULL, 0x1001300000002008ULL, 0x1001200000006008ULL, 0x1001300000006008ULL,
		0x100120000000200cULL, 0x100130000000200cULL, 0x100120000000600cULL, 0x100130000000600cULL,
	},
	{
		0x0000000000000000ULL, 0x0002000000000000ULL, 0x0000000000000100ULL, 0x0002000000000100ULL,
		0x0000000400000000ULL, 0x0002000400000000ULL, 0x0000000400000100ULL, 0x0002000400000100ULL,
		0x0000000000000020ULL, 0x0002000000000020ULL, 0x0000000000000120ULL, 0x0002000000000120ULL,
		0x0000000400000020ULL, 0x0002000400000020ULL, 0x0000000400000120ULL, 0x0002000400000120ULL,
		0x0000000000000200ULL, 0x0002000000000200ULL, 0x0000000000000300ULL, 0x0002000000000300ULL,
		0x0000000400000200ULL, 0x0002000400000200ULL, 0x0000000400000300ULL, 0x0002000400000300ULL,
		0x0000000000000220ULL, 0x0002000000000220ULL, 0x0000000000000320ULL, 0x0002000000000320ULL,
		0x0000000400000220ULL, 0x0002000400000220ULL, 0x0000000400000320ULL, 0x0002000400000320ULL,
		0x0000040000000000ULL, 0x0002040000000000ULL, 0x0000040000000100ULL, 0x0002040000000100ULL,
		0x0000040400000000ULL, 0x0002040400000000ULL, 0x0000040400000100ULL, 0x0002040400000100ULL,
		0x0000040000000020ULL, 0x0002040000000020ULL, 0x0000040000000120ULL, 0x0002040000000120ULL,
		0x0000040400000020ULL, 0x0002040400000020ULL, 0x0000040400000120ULL, 0x0002040400000120ULL,
		0x0000040000000200ULL, 0x0002040000000200ULL, 0x0000040000000300ULL, 0x0002040000000300ULL,
		0x0000040400000200ULL, 0x0002040400000200ULL, 0x0000040400000300ULL, 0x0002040400000300ULL,
		0x0000040000000220ULL, 0x0002040000000220ULL, 0x0000040000000320ULL, 0x0002040000000320ULL,
		0x0000040400000220ULL, 0x0002040400000220ULL, 0x0000040400000320ULL, 0x0002040400000320ULL,
		0x0200000000000000ULL, 0x0202000000000000ULL, 0x0200000000000100ULL, 0x0202000000000100ULL,
		0x0200000400000000ULL, 0x0202000400000000ULL, 0x0200000400000100ULL, 0x0202000400000100ULL,
		0x0200000000000020ULL, 0x0202000000000020ULL, 0x0200000000000120ULL, 0x0202000000000120ULL,
		0x0200000400000020ULL, 0x0202000400000020ULL, 0x0200000400000120ULL, 0x0202000400000120ULL,
		0x0200000000000200ULL, 0x0202000000000200ULL, 0x0200000000000300ULL, 0x0202000000000300ULL,
		0x0200000400000200ULL, 0x0202000400000200ULL, 0x0200000400000300ULL, 0x0202000400000300ULL,
		0x0200000000000220ULL, 0x0202000000000220ULL, 0x0200000000000320ULL, 0x0202000000000320ULL,
		0x0200000400000220ULL, 0x0202000400000220ULL, 0x0200000400000320ULL, 0x0202000400000320ULL,
		0x0200040000000000ULL, 0x0202040000000000ULL, 0x0200040000000100ULL, 0x0202040000000100ULL,
		0x0200040400000000ULL, 0x0202040400000000ULL, 0x0200040400000100ULL, 0x0202040400000100ULL,
		0x0200040000000020ULL, 0x0202040000000020ULL, 0x0200040000000120ULL, 0x0202040000000120ULL,
		0x0200040400000020ULL, 0x0202040400000020ULL, 0x0200040400000120ULL, 0x0202040400000120ULL,
		0x0200040000000200ULL, 0x0202040000000200ULL, 0x0200040000000300ULL, 0x0202040000000300ULL,
		0x0200040400000200ULL, 0x0202040400000200ULL, 0x0200040400000300ULL, 0x0202040400000300ULL,
		0x0200040000000220ULL, 0x0202040000000220ULL, 0x0200040000000320ULL, 0x0202040000000320ULL,
		0x0200040400000220ULL, 0x0202040400000220ULL, 0x0200040400000320ULL, 0x0202040400000320ULL,
		0x0000000001000000ULL, 0x0002000001000000ULL, 0x0000000001000100ULL, 0x0002000001000100ULL,
		0x0000000401000000ULL, 0x0002000401000000ULL, 0x0000000401000100ULL, 0x0002000401000100ULL,
		0x0000000001000020ULL, 0x0002000001000020ULL, 0x0000000001000120ULL, 0x0002000001000120ULL,
		0x0000000401000020ULL, 0x0002000401000020ULL, 0x0000000401000120ULL, 0x0002000401000120ULL,
		0x0000000001000200ULL, 0x0002000001000200ULL, 0x0000000001000300ULL, 0x0002000001000300ULL,
		0x0000000401000200ULL, 0x0002000401000200ULL, 0x0000000401000300ULL, 0x0002000401000300ULL,
		0x0000000001000220ULL, 0x0002000001000220ULL, 0x0000000001000320ULL, 0x0002000001000320ULL,
		0x0000000401000220ULL, 0x0002000401000220ULL, 0x0000000401000320ULL, 0x0002000401000320ULL,
		0x0000040001000000ULL, 0x0002040001000000ULL, 0x0000040001000100ULL, 0x0002040001000100ULL,
		0x0000040401000000ULL, 0x0002040401000000ULL, 0x0000040401000100ULL, 0x0002040401000100ULL,
		0x0000040001000020ULL, 0x0002040001000020ULL, 0x0000040001000120ULL, 0x0002040001000120ULL,
		0x0000040401000020ULL, 0x0002040401000020ULL, 0x0000040401000120ULL, 0x0002040401000120ULL,
		0x0000040001000200ULL, 0x0002040001000200ULL, 0x0000040001000300ULL, 0x0002040001000300ULL,
		0x0000040401000200ULL, 0x0002040401000200ULL, 0x0000040401000300ULL, 0x0002040401000300ULL,
		0x0000040001000220ULL, 0x0002040001000220ULL, 0x0000040001000320ULL, 0x0002040001000320ULL,
		0x0000040401000220ULL, 0x0002040401000220ULL, 0x0000040401000320ULL, 0x0002040401000320ULL,
		0x0200000001000000ULL, 0x0202000001000000ULL, 0x0200000001000100ULL, 0x0202000001000100ULL,
		0x0200000401000000ULL, 0x0202000401000000ULL, 0x0200000401000100ULL, 0x0202000401000100ULL,
		0x0200000001000020ULL, 0x0202000001000020ULL, 0x0200000001000120ULL, 0x0202000001000120ULL,
		0x0200000401000020ULL, 0x0202000401000020ULL, 0x0200000401000120ULL, 0x0202000401000120ULL,
		0x0200000001000200ULL, 0x0202000001000200ULL, 0x0200000001000300ULL, 0x0202000001000300ULL,
		0x0200000401000200ULL, 0x0202000401000200ULL, 0x0200000401000300ULL, 0x0202000401000300ULL,
		0x0200000001000220ULL, 0x0202000001000220ULL, 0x0200000001000320ULL, 0x0202000001000320ULL,
		0x0200000401000220ULL, 0x0202000401000220ULL, 0x0200000401000320ULL, 0x0202000401000320ULL,
		0x0200040001000000ULL, 0x0202040001000000ULL, 0x0200040001000100ULL, 0x0202040001000100ULL,
		0x0200040401000000ULL, 0x0202040401000000ULL, 0x0200040401000100ULL, 0x0202040401000100ULL,
		0x0200040001000020ULL, 0x0202040001000020ULL, 0x0200040001000120ULL, 0x0202040001000120ULL,
		0x0200040401000020ULL, 0x0202040401000020ULL, 0x0200040401000120ULL, 0x0202040401000120ULL,
		0x0200040001000200ULL, 0x0202040001000200ULL, 0x0200040001000300ULL, 0x0202040001000300ULL,
		0x0200040401000200ULL, 0x0202040401000200ULL, 0x0200040401000300ULL, 0x0202040401000300ULL,
		0x0200040001000220ULL, 0x0202040001000220ULL, 0x0200040001000320ULL, 0x0202040001000320ULL,
		0x0200040401000220ULL, 0x0202040401000220ULL, 0x0200040401000320ULL, 0x0202040401000320ULL,
	},
};


typedef union
{
	ulong ulongs[32 / sizeof(ulong)];
	uint uints[32 / sizeof(uint)];
} hash32_t;

typedef union
{
	ulong ulongs[64 / sizeof(ulong)];
	uint4 uint4s[64 / sizeof(uint4)];
} hash64_t;

// state context
typedef struct {
    union {                                 // state:
        uchar b[200];                     // 8-bit bytes
        ulong q[25];                     // 64-bit words
    } st;
    int pt, rsiz, mdlen;                    // these don't overflow
} sha3_ctx_t;

typedef struct cza_key_s {
	uchar		cw[8];
	uchar		sch[56];
} cza_key_t;

#define memset(src, val, count) for (uint i = 0; i != count; ++i) { (src)[i] = val; }
#define copy(dst, src, count) for (uint i = 0; i != count; ++i) { (dst)[i] = (src)[i]; }
#define copy_s(dst, src, count) for (uint i = 0; i != count; ++i) { (dst)[count-i-1] = (src)[i]; }

void sha3_keccakf(ulong st[25])
{
    // constants
    const ulong keccakf_rndc[24] = {
        0x0000000000000001, 0x0000000000008082, 0x800000000000808a,
        0x8000000080008000, 0x000000000000808b, 0x0000000080000001,
        0x8000000080008081, 0x8000000000008009, 0x000000000000008a,
        0x0000000000000088, 0x0000000080008009, 0x000000008000000a,
        0x000000008000808b, 0x800000000000008b, 0x8000000000008089,
        0x8000000000008003, 0x8000000000008002, 0x8000000000000080,
        0x000000000000800a, 0x800000008000000a, 0x8000000080008081,
        0x8000000000008080, 0x0000000080000001, 0x8000000080008008
    };
    const int keccakf_rotc[24] = {
        1,  3,  6,  10, 15, 21, 28, 36, 45, 55, 2,  14,
        27, 41, 56, 8,  25, 43, 62, 18, 39, 61, 20, 44
    };
    const int keccakf_piln[24] = {
        10, 7,  11, 17, 18, 3, 5,  16, 8,  21, 24, 4,
        15, 23, 19, 13, 12, 2, 20, 14, 22, 9,  6,  1
    };

    // variables
    int i, j, r;
    ulong t, bc[5];

    // actual iteration
    for (r = 0; r < KECCAKF_ROUNDS; r++) {

        // Theta
        for (i = 0; i < 5; i++)
            bc[i] = st[i] ^ st[i + 5] ^ st[i + 10] ^ st[i + 15] ^ st[i + 20];

        for (i = 0; i < 5; i++) {
            t = bc[(i + 4) % 5] ^ ROTL64(bc[(i + 1) % 5], 1);
            for (j = 0; j < 25; j += 5)
                st[j + i] ^= t;
        }

        // Rho Pi
        t = st[1];
        for (i = 0; i < 24; i++) {
            j = keccakf_piln[i];
            bc[0] = st[j];
            st[j] = ROTL64(t, keccakf_rotc[i]);
            t = bc[0];
        }

        //  Chi
        for (j = 0; j < 25; j += 5) {
            for (i = 0; i < 5; i++)
                bc[i] = st[j + i];
            for (i = 0; i < 5; i++)
                st[j + i] ^= (~bc[(i + 1) % 5]) & bc[(i + 2) % 5];
        }

        //  Iota
        st[0] ^= keccakf_rndc[r];
    }

}
// Initialize the context for SHA3
int sha3_init(sha3_ctx_t *c, int mdlen)
{
    int i;

    for (i = 0; i < 25; i++)
        c->st.q[i] = 0;
    c->mdlen = mdlen;
    c->rsiz = 200 - 2 * mdlen;
    c->pt = 0;

    return 1;
}

// update state with more data
int sha3_update(sha3_ctx_t *c, const void *data, size_t len)
{
    size_t i;
    int j;

    j = c->pt;
    for (i = 0; i < len; i++) {
        c->st.b[j++] ^= ((const uchar *) data)[i];
        if (j >= c->rsiz) {
            sha3_keccakf(c->st.q);
            j = 0;
        }
    }
    c->pt = j;

    return 1;
}

// finalize and output a hash
int sha3_final(void *md, sha3_ctx_t *c)
{
    int i;

    c->st.b[c->pt] ^= 0x06;
    c->st.b[c->rsiz - 1] ^= 0x80;
    sha3_keccakf(c->st.q);

    for (i = 0; i < c->mdlen; i++) {
        ((uchar *) md)[i] = c->st.b[i];
    }

    return 1;
}

void *sha3(const void *in, size_t inlen, void *md, int mdlen)
{
    sha3_ctx_t sha3;

    sha3_init(&sha3, mdlen);
    sha3_update(&sha3, in, inlen);
    sha3_final(md, &sha3);

    return md;
}

inline ulong cza_load_le64(const uchar *p)
{
	return (ulong)(((ulong)p[7] << 56) |
		((ulong)p[6] << 48) |
		((ulong)p[5] << 40) |
		((ulong)p[4] << 32) |
		((ulong)p[3] << 24) |
		((ulong)p[2] << 16) |
		((ulong)p[1] << 8) |
		(ulong)p[0]
		);
}

inline void	cza_xor_64(uchar *b, const uchar *a)
{
	unsigned int i;

	for (i = 0; i < 8; i++)
			b[i] ^= a[i];
}

inline int xor(uchar val)
{
	int r = 0;
	for (int k = 0; k < 8; k++)
	{
		r ^= (val & 0x1);
		val = val >> 1;
	}
	return r;
}

inline ulong cza_key_permute_block(ulong k)
{
	ulong n = 0;
	int i;

	for (i = 0; i < 8; i++)
	{
		n |= kperm[i][k & 0xff];
		k >>= 8;
	}

	return n;
}

void cza_key_schedule_block(const cza_cw_t cw, struct cza_key_s *key)
{
	ulong k[7];
	int i, j;

	k[6] = cza_load_le64(cw);
	for (i = 6; i > 0; i--)
		k[i - 1] = cza_key_permute_block(k[i]);

	for (i = 0; i < 7; i++)
		for (j = 0; j < 8; j++)
			key->sch[i * 8 + j] = (uchar)((k[i] >> (j * 8)) ^ i);
}

void cza_word_dec(const cza_keys_t key, const uchar in[CZA_DATA_SIZE], cza_block_t out)
{
	unsigned int	i = CZA_KEYSBUFF_SIZE;
	uchar	W[CZA_DATA_SIZE];

	copy(W, in, CZA_DATA_SIZE);

	while (i--)
	{
		uchar	L;
		uchar	S;

		S = cza_sbox[key[i] ^ W[6]];

		L = W[7] ^ S;

		W[7] = W[6];
		W[6] = W[5] ^ cza_perm[S];
		W[5] = W[4];
		W[4] = W[3] ^ L;
		W[3] = W[2] ^ L;
		W[2] = W[1] ^ L;
		W[1] = W[0];

		W[0] = L;
	}

	copy(out, W, CZA_DATA_SIZE);
}

int cza_dec(const struct cza_key_s *key, uchar *data, uchar *in)
{
	int r=0;
	cza_word_dec(key->sch, data, data);

	for (int i = 8; i < TS_SIZE; i += 8)
	{
		cza_xor_64(data + i - 8, data + i);
		cza_word_dec(key->sch, data + i, data + i);
	}

	for (int i = 0; i < 256; i++)
	{
		r ^= xor (in[i] & data[i]);
	}

	return r;
}

int shift(uchar out[256], uchar in[256], int sf)
{
	int sf_i = sf / 8;
	int sf_r = sf % 8;
	int mask = (1 << sf_r) - 1;
	int bits = (8 - sf_r);
	int res;
	
	if (sf_i > 0)
	{
		for (int k = 0; k < 256; k++)
		{
			int ks = (k + sf_i) % 256;
			out[k] = in[ks];
		}
	}
	else
	{
		copy(out, in, 256);
	}
	res = (out[0] & mask) << bits;
	for (int k = 0; k < 255; k++)
	{
		uchar val = (out[k + 1] & mask) << bits;
		out[k] = (out[k] >> sf_r) + val;
	}
	out[255] = (out[255] >> sf_r) + res;

	return 0;
}

int byteCpy(uchar datIn[256], uchar datOut[256])
{
	for (int k = 0; k < 256; k+=4)
	{
		datOut[k] = datIn[k+3];
		datOut[k+1] = datIn[k + 2];
		datOut[k+2] = datIn[k + 1];
		datOut[k+3] = datIn[k];
	}

	return 0;
}


int czz_scramble(
	uchar input[256], 
	uchar output[256], 
	__global uchar const *pmat, 
	struct cza_key_s *key, 
	int k)
{
	uchar	data[TS_SIZE];

	int j = 0;
	uchar cw[TS_SIZE] = {
		0x0, 0xe0, 0x1b, 0x02, 0xc9, 0xe0, 0x45, 0xee
	};
	cw[0] = k;
	// for every row
	for (int k = 0; k < 2048; k++)
	{
		int r;

		copy(data, pmat, 256);
		cza_key_schedule_block(cw, key);
		copy(cw, data, TS_SIZE);
		r = cza_dec(key, data, input);
		
		output[k / 8] |= (r << (k % 8));
		pmat += 256;
	}

	return 0;
}

void compute_hash_chunks(
	__global volatile uchar* restrict g_output,
	__constant uchar const* g_header,
	__global uchar const* g_dag,
	ulong nonce,
	uint isolate
	)
{
	uchar seed[64] = { 0 };
	uchar output[32] = { 0 };
	
	uint val0 = (uint)(nonce & 0xFFFFFFFF);
	uint val1 = (uint)(nonce >> 32);
	for (int k = 3; k >= 0; k--)
	{
		seed[k] = val0 & 0xFF;
		val0 >>= 8;
	}
	
	for (int k = 7; k >= 4; k--)
	{
		seed[k] = val1 & 0xFF;
		val1 >>= 8;
	}
	
	for (int k = 0; k < 32; k++)
	{
		seed[k+8] = g_header[k];
	}

	uchar sha512_out[64] = {0};
	sha3(seed, 64, sha512_out, 64);
	uchar perm_in[256] = {0}, perm_out[256] = {0};
	copy_s(perm_in, sha512_out, 64);
	copy(&perm_in[64],  &perm_in[0], 64);
	copy(&perm_in[128], &perm_in[0], 64);
	copy(&perm_in[192], &perm_in[0], 64);
	barrier(CLK_LOCAL_MEM_FENCE);
	cza_key_t key;
	for (int k = 0; k < 64; k++)
	{
		int sf, bs;
		uchar it;
		__global uchar const* ptbl;
		
		sf = perm_in[0] & 0x7f;
		bs = perm_in[255] >> 4;
		it = (k / 16) * 16 + bs;
		ptbl = g_dag + it * 524288;

		czz_scramble(perm_in, perm_out, ptbl, &key, it);
		//barrier(CLK_LOCAL_MEM_FENCE);
		shift(perm_in, perm_out, sf);
		memset(perm_out, 0, 256);			
	}
	barrier(CLK_LOCAL_MEM_FENCE);
	byteCpy(perm_in, perm_out);
	sha3(perm_out, 256, output, 32);
	copy_s(g_output, output, 32);
}

__kernel void czzhash_search(
	__global volatile uchar* restrict g_output,
	__constant uchar const* g_header,
	__global uchar const* g_dag,
	ulong start_nonce,
	ulong target,
	uint isolate
	)
{
	//__local compute_hash_share share[HASHES_PER_LOOP];
	uint const gid = get_global_id(0);
	compute_hash_chunks(g_output, g_header, g_dag, start_nonce + 0, 1);
	//if (as_ulong(as_uchar8(g_output[0]).s76543210) < target)
	//{
		//uint slot = min(convert_uint(MAX_OUTPUTS), convert_uint(atomic_inc(&g_output[0]) + 1));
		//g_output[slot] = gid;
	//}
}
`
